# Cache objects
packer_cache/

# Crash log
crash.log

#semantic-release node.js extras
node_modules
# https://www.packer.io/guides/hcl/variables
# Exclude all .pkrvars.hcl files, which are likely to contain sensitive data, 
# such as password, private keys, and other secrets. These should not be part of 
# version control as they are data points which are potentially sensitive and 
# subject to change depending on the environment.
#
*.pkrvars.hcl

# For built boxes
*.box

# Ansible Tower ignore list

# Ansible runtime and backups
*.original
*.tmp
*.bkp
*.retry


# Tower runtime roles
roles/**
!roles/requirements.yml
examples/hosts
vault.yml
files/vault
files/vault*_SHA256SUMS
meta/.galaxy_install_info
app_inventories/
sso-test.michfb.com.yml
sso.michfb.com.yml


# Try tyo avoid any plain-text passwords
*pwd*
*pass*
*password*
*fbins*
*.txt

# Exclude all binaries
*.bin
*.jar
*.tar
*.zip
*.gzip
*.tgz

# Other
*.crt
*.key


# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
